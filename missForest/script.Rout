
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-redhat-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> rawdat <- read.csv('temp_in.csv', header=TRUE)
> 
> #Run the missForest method
> library(missForest)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.
Loading required package: foreach
Loading required package: itertools
Loading required package: iterators

Attaching package: 'missForest'

The following object is masked _by_ '.GlobalEnv':

    missForest

> 
> rawdat <- as.data.frame(rawdat)
> xAttr <- colnames(rawdat)
> 
> for (t.co in 1:length(xAttr)){
+   if (is.na(pmatch('disc',xAttr[t.co]))){
+     rawdat[,t.co] <- as.numeric(rawdat[,t.co])
+   } else {
+     nVal <- max(rawdat[,t.co], na.rm=TRUE)
+     rawdat[,t.co] <- factor(rawdat[,t.co], levels=1:nVal, exclude=NaN)
+   }
+ }
> 
> set.seed(81)
> rawdat.imp <- missForest(rawdat)
  missForest iteration 1 in progress...done!
  missForest iteration 2 in progress...done!
  missForest iteration 3 in progress...done!
  missForest iteration 4 in progress...done!
> rawdat.imp <- rawdat.imp$ximp
> rawdat.imp <- lapply(rawdat.imp,as.numeric)
> write.csv(rawdat.imp, 'temp_out.csv')
> 
> proc.time()
   user  system elapsed 
 19.401   0.036  19.487 
sForest iteration 9 in progress...done!
  missForest iteration 10 in progress...done!
> rawdat.imp <- rawdat.imp$ximp
> rawdat.imp <- lapply(rawdat.imp,as.numeric)
> write.csv(rawdat.imp, 'temp_out.csv')
> 
> proc.time()
   user  system elapsed 
 38.100   0.094  38.287 
